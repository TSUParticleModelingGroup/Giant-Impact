There has been some interest in making our lunar forming impact code public. 
It was 6000 plus lines of code that just grew over the years which was too convoluted to make public. 
Hence, I have rewritten it so it will be easier to use. 
It is written for only one GPU but if there is interest I can make it work for multiple GPUs. 

You will need a Linux system with a CUDA-enabled NVIDIA GPU. Download the GiantImpact folder. 
In the GiantImpact folder, you will find 6 subfolders.
Code: Which contains all the source code
Executables: Which will hold all the executables that will be compiled.
LinuxScripts: Which will perform all the Linux tasks that need to be performed.
ReadMes: Which will contain all the ReadMe files that will be placed in all the folders that will be created to guide you as you work.
SetupTemplates: Text files that you will modify to set up your specific runs.
TargetImpactorBin: Which will hold all the different Target and Impactors that you may build.
You will also find in this folder 3 text files.
compileAll: A Linux script (also in the LinuxScript folder) that will create all of the executables.
runGTI: A Linux script (also in the LinuxScript folder) that will run the generate target and impactor code.
setupGeneratingTargetImpactor: A file that the user will modify for the target and impactors that they would like generated. 
This file will be read in by the generate target and impactor code.

Once you create a target and impactor they will be placed in a time-stamped folder in the TargetImpactorBin folder. 
(Example: TargetImpactor4-7-11:20) (Note: It is only down to the minute so if you build more than one a minute the code will complain.) 
You can rename the folder to whatever name you like.

Move into the new folder and it will contain 2 subfolders and 2 text files.
ImpactBin: This folder will hold all the impacts that you create.
TargetImpactorInformation: This folder will contain all the information about how the target and impactor were created.
runImpactInitialization: This text file is a Linux script that will run the code that sets up the impact that you specify.
setupImpactInitialization: This text file you will modify with the type of impact that you would like.

Once you initialize the run a time-stamped folder will be created in the ImpactBin folder. 
(Example: Inpact4-7-11:34) Rename it to whatever you like. 
This folder will initially hold your impact at time = 0. 

Move into the new folder and it will contain 1 subfolder and 3 text files.
ImpactInformation: This folder will contain all the information about how the impact was created.
runImpactAddTime: This text file is a Linux script that will execute the program that adds time to your impact.
runImpactViewer: This text file is a Linux script that will execute the program that allows you to view the impact that you have created so far. 
setupImpactAddTime: This text file you will modify with the amount of time you would like to add to the existing impact. 

Note: The binary file impactPosVel contains a series of time-positions-velocities as float-N*float4-N*float4, 
where N is the number of elements. Initially, there is just one entre in the file when you add time you just keep adding entries.  

In summary to run the code:
 Enter what you like in the setupGeneratingTargetImpactor text file
Open a terminal in the current folder and type ./compileAll
Type ./RunGTI
Move into the new folder in TargetImpactorBin
Enter what you like in the setupImpactInitialization text file
Open a terminal in the current folder and type ./runImpactInitialization
Move into the new folder in ImpactBin
Enter what you like in the setupImpactAddTime text file
Open a terminal in the current folder and type ./runImpactAddTime
You can keep adding time as many times as you want by repeating the two steps above
You can view the impact at any time by typing ./runImpactViewer in the command line
Statistics for the run will be in the runSTatsFile. The positions and velocities of the run are stored in the ImpactInfomation folder in the binary file impactPosVel. 
If you want to take this file and run it on some other viewing software the data is stored 
(time as a float)(N*positions as float4)(N*velocities as float4), (time as a float)(N*positions as float4)(N*velocities as float4) â€¦ where N is the number of elements.

As you are running the program you can interact with it with the following key commands.
In the system positive x is to the right, positive y is up, and positive z is towards you.
h -> help
q -> quits the program
g -> go or run the program
p -> pause the program
t -> sets the graphics to translate 
r -> sets the graphics to rotate
x -> translate or rotate about the x-axis
y -> translate or rotate about the y-axis
z -> translate or rotate about the z-axis
1 -> draw elements as points
2 -> draw elements as spheres (not available while generating bodies)
! -> draw All elements
@ -> draw the program thinks is the Earth and the Moon (not available while generating bodies)
m -> start recording a movie
M -> stop recording a movie
s -> take a screenshot
b -> view run backward (only available in view program)
f -> view run forward (only available in view program)


